// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VEHABANK.WebApi.Context;

#nullable disable

namespace VEHABANK.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250510181407_loginDeleteIdPKCustomerNumber")]
    partial class loginDeleteIdPKCustomerNumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Login", b =>
                {
                    b.Property<string>("CustomerNumber")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Authorization")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Transaction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FromAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ToAccountId")
                        .HasColumnType("int");

                    b.Property<int>("Transaction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int?>("LoginLogId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionHistoryId")
                        .HasColumnType("int");

                    b.Property<int?>("TransferId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("LoginLogId");

                    b.HasIndex("TransactionHistoryId");

                    b.HasIndex("TransferId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Branch", b =>
                {
                    b.HasOne("VEHABANK.WebApi.Entities.Account", null)
                        .WithMany("BranchId")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Login", b =>
                {
                    b.HasOne("VEHABANK.WebApi.Entities.User", "User")
                        .WithMany("LoginId")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.User", b =>
                {
                    b.HasOne("VEHABANK.WebApi.Entities.Account", null)
                        .WithMany("CustomerId")
                        .HasForeignKey("AccountId");

                    b.HasOne("VEHABANK.WebApi.Entities.Branch", null)
                        .WithMany("BranchManagerId")
                        .HasForeignKey("BranchId");

                    b.HasOne("VEHABANK.WebApi.Entities.LoginLog", null)
                        .WithMany("LoginId")
                        .HasForeignKey("LoginLogId");

                    b.HasOne("VEHABANK.WebApi.Entities.TransactionHistory", null)
                        .WithMany("PerformedByUserId")
                        .HasForeignKey("TransactionHistoryId");

                    b.HasOne("VEHABANK.WebApi.Entities.Transfer", null)
                        .WithMany("PerformedByUser")
                        .HasForeignKey("TransferId");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Account", b =>
                {
                    b.Navigation("BranchId");

                    b.Navigation("CustomerId");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Branch", b =>
                {
                    b.Navigation("BranchManagerId");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.LoginLog", b =>
                {
                    b.Navigation("LoginId");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.TransactionHistory", b =>
                {
                    b.Navigation("PerformedByUserId");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.Transfer", b =>
                {
                    b.Navigation("PerformedByUser");
                });

            modelBuilder.Entity("VEHABANK.WebApi.Entities.User", b =>
                {
                    b.Navigation("LoginId");
                });
#pragma warning restore 612, 618
        }
    }
}
